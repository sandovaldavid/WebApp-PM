# Generated by Django 5.1.4 on 2024-12-23 18:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('rol', models.CharField(choices=[('Administrador', 'Administrador'), ('Desarrollador', 'Desarrollador'), ('JefeProyecto', 'Jefe de Proyecto'), ('Cliente', 'Cliente'), ('Tester', 'Tester')], max_length=50)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RolModuloAcceso',
            fields=[
                ('idRolModulo', models.AutoField(primary_key=True, serialize=False)),
                ('nombreRol', models.CharField(max_length=50)),
                ('modulo', models.CharField(max_length=255)),
                ('permisos', models.CharField(choices=[('lectura', 'Lectura'), ('escritura', 'Escritura'), ('lectura-escritura', 'Lectura-Escritura')], max_length=50)),
            ],
            options={
                'verbose_name': 'Rol Modulo Acceso',
                'verbose_name_plural': 'Roles Modulos Acceso',
                'db_table': 'rol_modulo_acceso',
            },
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='administrador', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'db_table': 'administrador',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='cliente', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='Desarrollador',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='desarrollador', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tareasCompletadas', models.PositiveIntegerField(default=0)),
                ('tiempoTotalEmpleado', models.DurationField(default='0:00:00')),
            ],
            options={
                'verbose_name': 'Desarrollador',
                'verbose_name_plural': 'Desarrolladores',
                'db_table': 'desarrollador',
            },
        ),
        migrations.CreateModel(
            name='JefeProyecto',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='jefe_proyecto', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('proyectosGestionados', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Jefe de Proyecto',
                'verbose_name_plural': 'Jefes de Proyecto',
                'db_table': 'jefe_proyecto',
            },
        ),
        migrations.CreateModel(
            name='Tester',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='tester', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tester',
                'verbose_name_plural': 'Testers',
                'db_table': 'tester',
            },
        ),
        migrations.CreateModel(
            name='UsuarioRolModulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol_modulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='usuarios.rolmoduloacceso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles_modulos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usuario Rol Modulo',
                'verbose_name_plural': 'Usuarios Roles Modulos',
                'unique_together': {('usuario', 'rol_modulo')},
            },
        ),
    ]
